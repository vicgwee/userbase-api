basePath: /
definitions:
  dal.User:
    properties:
      address:
        example: '10 Anson Road, #17-06, International Plaza, 097903'
        maxLength: 100
        minLength: 1
        type: string
      createdAt:
        example: "20220801"
        maxLength: 8
        minLength: 8
        type: string
      description:
        example: testDescription
        maxLength: 1000
        minLength: 1
        type: string
      dob:
        example: "20060102"
        maxLength: 8
        minLength: 8
        type: string
      id:
        example: "1"
        maxLength: 16
        minLength: 1
        type: string
      name:
        example: test
        maxLength: 100
        minLength: 1
        type: string
    required:
    - address
    - description
    - dob
    - id
    - name
    type: object
host: localhost:10000
info:
  contact: {}
  title: Userbase API documentation
  version: 1.0.0
paths:
  /users:
    get:
      description: get all users
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dal.User'
            type: array
        "404":
          description: Not Found
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dal.User'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dal.User'
        "400":
          description: Bad Request
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Create new user based on parameters
      tags:
      - Users
  /users/{id}:
    delete:
      description: delete user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Delete one user
      tags:
      - Users
    get:
      description: get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dal.User'
        "404":
          description: Not Found
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Get one user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: update existing user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dal.User'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dal.User'
        "400":
          description: Bad Request
          schema:
            type: object
        "403":
          description: Forbidden
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Update existing user based on parameters
      tags:
      - Users
swagger: "2.0"
